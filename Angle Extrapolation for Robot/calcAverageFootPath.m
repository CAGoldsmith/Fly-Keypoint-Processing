clear all
% close all

videoLocs = {'201218_bolt-Chr\201218_bolt-Chr_Fly06_M_T011',...
    '201217_bolt-Chr\201217_bolt-Chr_Fly03_M_T002',...
    '201217_bolt-Chr\201217_bolt-Chr_Fly05_M_T007',...
    '201217_bolt-Chr\201217_bolt-Chr_Fly07_F_T012'};
videoVarFileNames = {'201218_bolt-Chr_Fly06_M_T011.mat',...
    '201217_bolt-Chr_Fly03_M_T002.mat',...
    '201217_bolt-Chr_Fly05_M_T007.mat',...
    '201217_bolt-Chr_Fly07_F_T012.mat'};
startIDVarNames = {'201218_stepStartIDs.mat','201217_T002_stepStartIDs.mat','201217_T007_stepStartIDs.mat',...
    '201217_T012_stepStartIDs.mat'};
trials = 4;

savePath = 'C:\Users\Clarissa G\Documents\MATLAB\Design Drosophibot\variables\';

for tr = 1:trials
    load(['C:\Users\Clarissa G\Videos\' videoLocs{tr} '\' videoVarFileNames{tr}],'keypoints3D');
    % load(['G:\Other computers\NeuroMINT Lab Computer\Videos\' videoLocs{tr} '\' videoVarFileNames{tr}],'keypoints3D');

    keypoints3D(:,:,3) = -keypoints3D(:,:,3); %Flip the z axis so it's right side up
    keypoints3D(:,:,1) = -keypoints3D(:,:,1);
    keypoints{tr} = keypoints3D;
    startIDs = load(['C:\Users\Clarissa G\Documents\MATLAB\Fly Keypoint Processing\Angle Extrapolation for Robot\' startIDVarNames{tr}]);
    % startIDs = load(['G:\Other computers\NeuroMINT Lab Computer\MATLAB\Fly Keypoint Processing\Angle Extrapolation for Robot\' startIDVarNames{tr}]);

    stepStartIDs{tr} = startIDs.stepStartIDs;
end

TarTipids = [36, 18, 30, 12, 24, 6];
ThCids = [31, 13, 25, 7, 19, 1];
legNames = {'Left Hind','Right Hind','Left Middle','Right Middle','Left Front','Right Front'};
solverPtNum = 82;
% tibiaL = 0.6442; %Taken from midLimbLengths generated by flyLimbProportions.m

%% Find the average footpath for each leg in each fly trial

%Separate each leg's keypoints into the different steps
for tr = 1:trials
    for l=1:6
        % figure
        % hold on
        for dim=1:3
            TarTipPos{tr}{l}(:,dim) = movmedian(keypoints{tr}(:,TarTipids(l),dim),5);
            ThCpos{tr}(l,dim) = mean(keypoints{tr}(:,ThCids(l),dim));
        end
        ptsPerStep = stepStartIDs{tr}{l}(2:end)-stepStartIDs{tr}{l}(1:end-1);
        for s=1:length(stepStartIDs{tr}{l})-1
            tipPosTemp = TarTipPos{tr}{l}(stepStartIDs{tr}{l}(s):stepStartIDs{tr}{l}(s+1),:);
            for dim=1:3
                tipPosSteps{tr}{l}{dim}(:,s) = interp1(linspace(0,1,ptsPerStep(s)+1),tipPosTemp(:,dim),linspace(0,1,solverPtNum));
            end
            % plot3(tipPosSteps{tr}{l}{1}(:,s),tipPosSteps{tr}{l}{2}(:,s),tipPosSteps{tr}{l}{3}(:,s))
        end
        for dim=1:3
            for i=1:solverPtNum
                avgTipPos{tr}{l}(i,dim) = mean(tipPosSteps{tr}{l}{dim}(i,:));
            end
        end
    end
end

%% Convert these footpaths into Drosophibot's coordinate frame
%Swap x and y coords
for l=1:6
    for tr=1:trials
        ftPathsRobotCoords{tr}{l}(:,1) = avgTipPos{tr}{l}(:,2);
        tempThCPos{tr}(l,1) = ThCpos{tr}(l,2);
        ftPathsRobotCoords{tr}{l}(:,3) = avgTipPos{tr}{l}(:,1);
        tempThCPos{tr}(l,3) = ThCpos{tr}(l,1);
        ftPathsRobotCoords{tr}{l}(:,2) = avgTipPos{tr}{l}(:,3);
        tempThCPos{tr}(l,2) = ThCpos{tr}(l,3);
    end
end

ThCpos = tempThCPos;


%% Find the average footpath for each leg from all of the fly trials

% for l=1:6
%     for dim=1:3
%         avgVector = [];
%         for tr=1:trials
%             avgVector(:,tr) = ftPathsRobotCoords{tr}{l}(:,dim);
%         end
%         for i=1:length(avgVector)
%             avgftPathsRobotCoords{l}(i,dim) = mean(avgVector(i,:));
%         end
%     end
% end

%% Shift the data so halfway through stance phase is the first point
% stanceEndIDs = [51,51,55,51,52,52]; %Hard coded for 82 pts from looking at the footpath graphs
% 
% for l=1:6
%     midStanceID(l) = floor((stanceEndIDs(l)-1)/2);
%     avgftPathsRobotCoords{l} = circshift(avgftPathsRobotCoords{l},-midStanceID(l)-1);
%     robotStanceEndIDs(l) = midStanceID(l);
%     robotStanceStartIDs(l) = solverPtNum - midStanceID(l);
% end

stanceEndIDs = [52,52,57,57,52,52];
for l=1:6
    midStanceID(l) = floor((stanceEndIDs(l)-1)/2);
    avgftPathsRobotCoords{l} = circshift(ftPathsRobotCoords{1}{l},-midStanceID(l)-1);
    robotStanceEndIDs(l) = midStanceID(l);
    robotStanceStartIDs(l) = solverPtNum - midStanceID(l);
end


%% Find distance of all of these points from their respective ThC joints for export, then make dimensionless

for l=1:6
    for dim=1:3
        avgThCposTemp = [];
        for tr=1
            avgThCposTemp = [avgThCposTemp ThCpos{tr}(l,dim)];
        end
        avgThCpos(l,dim) = mean(avgThCposTemp);
    end
end

tibiaVecs = keypoints{1}(:,29,:) - keypoints{1}(:,28,:);
for i=1:length(tibiaVecs)
    tibiaL(i,:) = norm([tibiaVecs(i,:,1), tibiaVecs(i,:,2), tibiaVecs(i,:,3)]);
end
avgTibiaL = mean(tibiaL);

for l=1:6
    ballFtPathVecs{l} = (avgftPathsRobotCoords{l} - avgThCpos(l,:))/avgtibiaL;
end
save([savePath 'ballFootPathVecs.mat'],'ballFtPathVecs','robotStanceStartIDs','robotStanceEndIDs')






